[{"path":"https://djwillichile.github.io/spEnviroDistr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU Affero General Public License","title":"GNU Affero General Public License","text":"Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU Affero General Public License","text":"GNU Affero General Public License free, copyleft license software kinds works, specifically designed ensure cooperation community case network server software. licenses software practical works designed take away freedom share change works. contrast, General Public Licenses intended guarantee freedom share change versions program–make sure remains free software users. speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. Developers use General Public Licenses protect rights two steps: (1) assert copyright software, (2) offer License gives legal permission copy, distribute /modify software. secondary benefit defending users’ freedom improvements made alternate versions program, receive widespread use, become available developers incorporate. Many developers free software heartened encouraged resulting cooperation. However, case software used network servers, result may fail come . GNU General Public License permits making modified version letting public access server without ever releasing source code public. GNU Affero General Public License designed specifically ensure , cases, modified source code becomes available community. requires operator network server provide source code modified version running users server. Therefore, public use modified version, publicly accessible server, gives public access source code modified version. older license, called Affero General Public License published Affero, designed accomplish similar goals. different license, version Affero GPL, Affero released new version Affero GPL permits relicensing license. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://djwillichile.github.io/spEnviroDistr/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions.","title":"GNU Affero General Public License","text":"“License” refers version 3 GNU Affero General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code.","title":"GNU Affero General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions.","title":"GNU Affero General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law.","title":"GNU Affero General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies.","title":"GNU Affero General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions.","title":"GNU Affero General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: work must carry prominent notices stating modified , giving relevant date. work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms.","title":"GNU Affero General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms.","title":"GNU Affero General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: Disclaiming warranty limiting liability differently terms sections 15 16 License; Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; Limiting use publicity purposes names licensors authors material; Declining grant rights trademark law use trade names, trademarks, service marks; Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination.","title":"GNU Affero General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies.","title":"GNU Affero General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients.","title":"GNU Affero General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents.","title":"GNU Affero General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom.","title":"GNU Affero General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/LICENSE.html","id":"id_13-remote-network-interaction-use-with-the-gnu-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Remote Network Interaction; Use with the GNU General Public License.","title":"GNU Affero General Public License","text":"Notwithstanding provision License, modify Program, modified version must prominently offer users interacting remotely computer network (version supports interaction) opportunity receive Corresponding Source version providing access Corresponding Source network server charge, standard customary means facilitating copying software. Corresponding Source shall include Corresponding Source work covered version 3 GNU General Public License incorporated pursuant following paragraph. Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU General Public License single combined work, convey resulting work. terms License continue apply part covered work, work combined remain governed version 3 GNU General Public License.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License.","title":"GNU Affero General Public License","text":"Free Software Foundation may publish revised /new versions GNU Affero General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU Affero General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU Affero General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU Affero General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty.","title":"GNU Affero General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability.","title":"GNU Affero General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16.","title":"GNU Affero General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU Affero General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. software can interact users remotely computer network, also make sure provides way users get source. example, program web application, interface display “Source” link leads users archive code. many ways offer source, different solutions better different programs; see section 13 specific requirements. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU AGPL, see https://www.gnu.org/licenses/.","code":"<one line to give the program's name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU Affero General Public License as     published by the Free Software Foundation, either version 3 of the     License, or (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU Affero General Public License for more details.      You should have received a copy of the GNU Affero General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>."},{"path":"https://djwillichile.github.io/spEnviroDistr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Guillermo Fuentes-Jaque. Author, maintainer.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fuentes-Jaque G (2024). spEnviroDistr: Tools Spatial Distribution Environmental Data. R package version 1.1.1.9000, https://djwillichile.github.io/spEnviroDistr/, https://github.com/djwillichile/spEnviroDistr.","code":"@Manual{,   title = {spEnviroDistr: Tools for Spatial Distribution of Environmental Data},   author = {Guillermo Fuentes-Jaque},   year = {2024},   note = {R package version 1.1.1.9000,     https://djwillichile.github.io/spEnviroDistr/},   url = {https://github.com/djwillichile/spEnviroDistr}, }"},{"path":[]},{"path":[]},{"path":"https://djwillichile.github.io/spEnviroDistr/index.html","id":"id_️-installation","dir":"","previous_headings":"","what":"️📦 Installation","title":"Tools for Spatial Distribution of Environmental Data","text":"can install development version spEnviroDistr GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"djwillichile/spEnviroDistr\")"},{"path":"https://djwillichile.github.io/spEnviroDistr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Tools for Spatial Distribution of Environmental Data","text":"basic example shows solve common problem:","code":"library(spEnviroDistr)  # Load the meuse dataset data(meuse, package = \"spEnviroDistr\") coordinates(meuse) <- ~x+y proj4string(meuse) <- CRS(\"+init=epsg:28992\")  # View a summary of the data summary(meuse)  # Apply Geographically Weighted Regression (GWR) cl <- createCluster(free = 2) result <- applyGWR(log(copper) ~ alt + dist + elev, data = meuse, longlat = FALSE, cl = cl)  # View GWR results print(result$output)  # Plot results on a prediction grid data(meuse.grid, package = \"spEnviroDistr\") coordinates(meuse.grid) <- ~x+y proj4string(meuse.grid) <- CRS(\"+init=epsg:28992\") gridded(meuse.grid) <- TRUE  spplot(meuse.grid, \"alt\")"},{"path":"https://djwillichile.github.io/spEnviroDistr/index.html","id":"id_-key-functions","dir":"","previous_headings":"","what":"💡 Key Functions","title":"Tools for Spatial Distribution of Environmental Data","text":"applyGWR: Applies Geographically Weighted Regression (GWR) spatial dataset. createCluster: Creates cluster parallel processing. fillNA: Fills NA values SpatRaster object using focal median filter. toGrid: Converts data frame Spatial Grid object. toPredictors: Resamples converts list raster layers predictors object.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/index.html","id":"id_-maintainers-and-license","dir":"","previous_headings":"","what":"🗃 Maintainers and License","title":"Tools for Spatial Distribution of Environmental Data","text":"🧑️ spEnviroDistr primarily maintained Guillermo Fuentes-Jaque. 📃 spEnviroDistr licensed MIT License.","code":""},{"path":[]},{"path":"https://djwillichile.github.io/spEnviroDistr/index.html","id":"id_-contribution","dir":"","previous_headings":"","what":"💻 Contribution","title":"Tools for Spatial Distribution of Environmental Data","text":"want contribute spEnviroDistr, please follow steps: Fork repository. Create new branch (git checkout -b feature-branch). Make changes (git commit -'Add new feature'). Push branch (git push origin feature-branch). Create Pull Request GitHub.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/index.html","id":"id_-references","dir":"","previous_headings":"","what":"📚 References","title":"Tools for Spatial Distribution of Environmental Data","text":"R Documentation: gstat details meuse meuse.grid datasets. “Principles Geographical Information Systems” P.. Burrough R.. McDonnell. “Spatial Data Analysis R” Roger Bivand, Edzer Pebesma, Virgilio Gómez-Rubio.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/applyGWR.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Geographically Weighted Regression (GWR) — applyGWR","title":"Apply Geographically Weighted Regression (GWR) — applyGWR","text":"function applies Geographically Weighted Regression (GWR) given formula dataset. GWR local form linear regression used model spatially varying relationships.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/applyGWR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Geographically Weighted Regression (GWR) — applyGWR","text":"","code":"applyGWR(   formula,   data,   longlat = TRUE,   cl = NULL,   fit.points = NULL,   showProgressSteps = FALSE )"},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/applyGWR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Geographically Weighted Regression (GWR) — applyGWR","text":"formula formula object describing model fitted, e.g., log(y) ~ x1 + x2. data spatial data frame (SpatialPointsDataFrame SpatialPolygonsDataFrame) containing variables formula. longlat Logical; TRUE, coordinates treated longitude/latitude. Default TRUE. cl Optional. cluster object parallel processing created makeCluster. Default NULL. fit.points Optional. spatial data frame making predictions specified locations. NULL, predictions made. showProgressSteps Logical; TRUE, prints progress messages analysis. Default FALSE.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/applyGWR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Geographically Weighted Regression (GWR) — applyGWR","text":"list following components: inputs list containing inputs used GWR analysis: formula, data, longlat. output list class gwr containing following elements:","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/applyGWR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply Geographically Weighted Regression (GWR) — applyGWR","text":"function intended use spatial datasets relationships variables may vary across space. GWR fits separate regression model location data, weighting nearby points heavily based specified bandwidth.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/applyGWR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Apply Geographically Weighted Regression (GWR) — applyGWR","text":"Fotheringham, . S., Brunsdon, C., & Charlton, M. (2002). Geographically Weighted Regression: Analysis Spatially Varying Relationships. John Wiley & Sons. doi:10.1002/9780470999141 Brunsdon, C., Fotheringham, . S., & Charlton, M. E. (1996). Geographically Weighted Regression: Method Exploring Spatial Nonstationarity. Geographical Analysis, 28(4), 281-298. doi:10.1111/j.1538-4632.1996.tb00936.x Fotheringham, . S., & O'Sullivan, D. (2004). Spatial Nonstationarity Local Models. Geographic Information Systems: Principles, Techniques, Management Applications (2nd ed., pp. 239-255). Wiley. Bivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied Spatial Data Analysis R (2nd ed.). Springer. doi:10.1007/978-1-4614-7618-4","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/applyGWR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Geographically Weighted Regression (GWR) — applyGWR","text":"","code":"data(meuse.grid, package = \"spEnviroDistr\") coordinates(meuse.grid) = ~x+y proj4string(meuse.grid) <- CRS(\"+init=epsg:28992\") gridded(meuse.grid) <- TRUE  data(meuse, package = \"spEnviroDistr\") coordinates(meuse) = ~x+y proj4string(meuse) <- CRS(\"+init=epsg:28992\")  cl <- createCluster(free = 2) RESULT <- applyGWR(log(copper) ~ alt + dist, meuse, longlat = FALSE, cl = cl)  print(RESULT$output) #> Call: #> gwr(formula = formula, data = data, bandwidth = bwG, adapt = adG,  #>     hatmatrix = TRUE, longlat = longlat, cl = cl, predictions = TRUE) #> Kernel function: gwr.Gauss  #> Adaptive quantile: 0.01146238 (about 1 of 155 data points) #> Summary of GWR coefficient estimates at data points: #>                     Min.     1st Qu.      Median     3rd Qu.        Max. #> X.Intercept. -17.0918413   3.7531281   9.3204449  13.0599683  40.5131677 #> alt           -0.9623308  -0.2499946  -0.1443481   0.0032744   0.5419798 #> dist          -9.2546319  -3.8881674  -1.9964676  -0.7525851   3.9001866 #>               Global #> X.Intercept.  6.7962 #> alt          -0.0786 #> dist         -1.5609 #> Number of data points: 155  #> Effective number of parameters (residual: 2traceS - traceS'S): 85.62554  #> Effective degrees of freedom (residual: 2traceS - traceS'S): 69.37446  #> Sigma (residual: 2traceS - traceS'S): 0.261182  #> Effective number of parameters (model: traceS): 66.28962  #> Effective degrees of freedom (model: traceS): 88.71038  #> Sigma (model: traceS): 0.2309702  #> Sigma (ML): 0.1747339  #> AICc (GWR p. 61, eq 2.33; p. 96, eq. 4.21): 139.6473  #> AIC (GWR p. 96, eq. 4.22): -34.63161  #> Residual sum of squares: 4.732451  #> Quasi-global R2: 0.8810787   RESULT <- applyGWR(log(copper) ~ alt + dist + elev, meuse, longlat = FALSE, cl = cl, fit.points = meuse.grid)"},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/createCluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Cluster for Parallel Processing — createCluster","title":"Create a Cluster for Parallel Processing — createCluster","text":"function creates parallel processing cluster detecting number available CPU cores machine, subtracting number cores specified left free, using remaining cores create cluster. can useful speeding computations can parallelized.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/createCluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Cluster for Parallel Processing — createCluster","text":"","code":"createCluster(free = 1)"},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/createCluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Cluster for Parallel Processing — createCluster","text":"free Integer. number CPU cores leave free tasks. default 1.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/createCluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Cluster for Parallel Processing — createCluster","text":"cluster object can used parallel processing functions like parLapply parApply.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/createCluster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Cluster for Parallel Processing — createCluster","text":"function detects total number CPU cores available machine using parallel package. subtracts number cores specified free parameter creates cluster using remaining cores. Linux systems, function use snow package's getClusterOption() determine type cluster create, ensuring compatibility system's parallel processing capabilities. operating systems, function defaults creating basic cluster without specifying type, work cases. Note function requires parallel snow packages installed loaded.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/createCluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Cluster for Parallel Processing — createCluster","text":"","code":"if (FALSE) { # \\dontrun{ # Create a cluster leaving 2 cores free for other tasks cl <- createCluster(free = 2)  # Use the cluster for parallel processing # ...  # Stop the cluster when done parallel::stopCluster(cl) } # }"},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/downscale.html","id":null,"dir":"Reference","previous_headings":"","what":"Downscale Function for Spatial Data — downscale","title":"Downscale Function for Spatial Data — downscale","text":"function performs downscaling spatial data using regression methods, including linear regression (lm), generalized linear model (glm), geographically weighted regression (gwr). ensures input rasters CRS extent, resamples response raster necessary, checks overlap percentage high-resolution predictor low-resolution predictor rasters.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/downscale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downscale Function for Spatial Data — downscale","text":"","code":"downscale(response, pred.lr, pred.hr, method = \"gwr\", cl = NULL)"},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/downscale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downscale Function for Spatial Data — downscale","text":"response SpatRaster. response variable raster (e.g., temperature) low resolution. pred.lr SpatRaster. low-resolution predictor raster(s) (e.g., elevation low resolution). pred.hr SpatRaster. high-resolution predictor raster(s) (e.g., elevation high resolution) used prediction. method Character. method used downscaling. Options \"lm\" linear regression, \"glm\" generalized linear model, \"gwr\" geographically weighted regression. Default \"gwr\". cl Optional. cluster object parallel processing. Default NULL.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/downscale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downscale Function for Spatial Data — downscale","text":"list containing two elements: fitted model predicted high-resolution raster.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/downscale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Downscale Function for Spatial Data — downscale","text":"function checks rasters share CRS extent. extents identical, resamples response raster match low-resolution predictor raster using bilinear interpolation. also calculates overlap percentage high- low-resolution rasters stops execution overlap less 60%. response raster variable interest lower resolution (e.g., temperature), pred.lr pred.hr predictors low high resolutions, respectively (e.g., elevation). method \"lm\" \"glm\", fits model using response low-resolution predictor raster data returns model predicted high-resolution raster. method \"gwr\", performs geographically weighted regression using provided spatial data returns result.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/downscale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downscale Function for Spatial Data — downscale","text":"","code":"library(terra)  # Load sample data data(dem) data(elev) data(tavg)  # Convert to SpatRaster objects tavg <- rast(tavg)   # Response raster (e.g., temperature) elev <- rast(elev)   # Low-resolution predictor (e.g., elevation at low resolution) dem <- rast(dem)     # High-resolution predictor (e.g., elevation at high resolution) dem<-aggregate(dem,2)  # Apply the downscale function with GWR method result <- downscale(response = tavg, pred.lr = elev, pred.hr = dem, method = \"gwr\") #> Error in downscale(response = tavg, pred.lr = elev, pred.hr = dem, method = \"gwr\"): could not find function \"downscale\"  # View the model and predicted high-resolution raster print(result$model) #> Error in eval(expr, envir, enclos): object 'result' not found par(mfrow=c(2,1)) plot(tavg) plot(result$result) #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'plot': object 'result' not found"},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/epsg.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert EPSG Code to CRS String — epsg","title":"Convert EPSG Code to CRS String — epsg","text":"function converts EPSG code corresponding coordinate reference system (CRS) string PROJ.4 format. EPSG code standard identifier used geographic coordinate systems.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/epsg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert EPSG Code to CRS String — epsg","text":"","code":"epsg(x)"},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/epsg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert EPSG Code to CRS String — epsg","text":"x integer numeric value representing EPSG code. example, 4326 corresponds WGS 84.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/epsg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert EPSG Code to CRS String — epsg","text":"character string PROJ.4 format represents CRS associated given EPSG code.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/epsg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert EPSG Code to CRS String — epsg","text":"function attempts convert EPSG code corresponding PROJ.4 string using sp package. conversion fails (e.g., due invalid unsupported EPSG code), function stop return error message. EPSG code widely used identifier coordinate reference systems. function simplifies process obtaining corresponding PROJ.4 string, can used various spatial analysis tasks.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/epsg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert EPSG Code to CRS String — epsg","text":"European Petroleum Survey Group (EPSG). Geodetic Parameter Dataset. https://epsg.org/ Bivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied Spatial Data Analysis R (2nd ed.). Springer. doi:10.1007/978-1-4614-7618-4","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/epsg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert EPSG Code to CRS String — epsg","text":"","code":"# Convert EPSG code 4326 to PROJ.4 string epsg(4326) #> [1] \"+init=epsg:4326\"  # Convert EPSG code 28992 (RD New / Amersfoort) epsg(28992) #> [1] \"+init=epsg:28992\"  # Handling an invalid EPSG code (this will return an error) if (FALSE) { # \\dontrun{ epsg(999999) } # }"},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/fillNA.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill NA values in a Raster — fillNA","title":"Fill NA values in a Raster — fillNA","text":"function fills NA values raster using focal median filter, particularly useful smoothing raster data interpolating missing values.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/fillNA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill NA values in a Raster — fillNA","text":"","code":"fillNA(x, w, i, verbose = FALSE)"},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/fillNA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill NA values in a Raster — fillNA","text":"x SpatRaster object terra package. raster NA values need filled. w matrix representing focal window used. Typically, square matrix odd dimensions, 3x3 5x5, determines neighborhood cells used compute median. integer specifying number iterations apply focal filter. iterations can lead smoother results may also alter data significantly. verbose logical value indicating whether print iteration number processing. Default FALSE.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/fillNA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill NA values in a Raster — fillNA","text":"SpatRaster object NA values filled using median surrounding values within specified focal window.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/fillNA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fill NA values in a Raster — fillNA","text":"function iteratively applies focal median filter fill NA values raster. median filter commonly used image processing reduce noise preserving edges, making robust choice filling missing values raster datasets. iteration recalculates median neighborhood defined w, replaces NA values x medians. number iterations () controls many times process repeated, can necessary large gaps NA values need filled progressively. verbose set TRUE, function print current iteration number provide insight process.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/fillNA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fill NA values in a Raster — fillNA","text":"","code":"# Load the meuse.grid data data(meuse.grid, package = \"spEnviroDistr\") coordinates(meuse.grid) = ~x+y proj4string(meuse.grid) <- CRS(\"+init=epsg:28992\") gridded(meuse.grid) <- TRUE  # Convert meuse.grid to SpatRaster r <- rast(meuse.grid)  # Define the focal window (3x3 matrix) w <- matrix(1, 3, 3)  # Fill NA values with 3 iterations and verbose output result <- fillNA(r[[\"alt\"]], w, 3, verbose = TRUE) #> Iteration: 3  #> Iteration: 2  #> Iteration: 1   # Plot the result plot(c(r[[\"alt\"]], result))"},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/meuse.grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction Grid for Meuse Data Set — meuse.grid","title":"Prediction Grid for Meuse Data Set — meuse.grid","text":"meuse.grid data frame represents spatial grid 40 m x 40 m spacing covers Meuse study area. dataset often used spatial interpolation geostatistical analysis context environmental modeling.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/meuse.grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction Grid for Meuse Data Set — meuse.grid","text":"","code":"data(meuse.grid, package = \"spEnviroDistr\")"},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/meuse.grid.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Prediction Grid for Meuse Data Set — meuse.grid","text":"data frame 3103 observations following 9 variables: x numeric vector representing x-coordinate RD New (Rijksdriehoek) topographical map coordinate system Netherlands. y numeric vector representing y-coordinate RD New system. part.arbitrary division study area two parts, labeled ''. part.b complementary division study area, labeled 'b'. elev Relative elevation local river bed meters. alt Altitude sea level meters, derived meuse.alt dataset, contains altitudes digitized 1:10,000 topographical map Netherlands. dist Distance Meuse river, derived spatial distance operation GIS; normalized \\([0,1]\\). soil Soil type. classifications based specific soil map may match published soil maps scale 1:50,000. ffreq Flooding frequency class. exact method generating classification unknown. definitions, see meuse dataset.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/meuse.grid.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Prediction Grid for Meuse Data Set — meuse.grid","text":"http://www.gstat.org/","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/meuse.grid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prediction Grid for Meuse Data Set — meuse.grid","text":"x y coordinates provided RD New coordinate system, standard topographical map projection Netherlands. coordinates projected UTM using R-Grass interface package Roger Bivand. alt variable represents altitude sea level, digitized 1:10,000 topographical map Netherlands part meuse.alt dataset. provides detailed elevation model Meuse study area. meuse.grid dataset commonly used conjunction meuse dataset spatial prediction kriging exercises, grid serves prediction surface.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/meuse.grid.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Prediction Grid for Meuse Data Set — meuse.grid","text":"Gstat: Program Geostatistical Modelling, Prediction Simulation. URL: http://www.gstat.org/ Bivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied Spatial Data Analysis R (2nd ed.). Springer. doi:10.1007/978-1-4614-7618-4","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/meuse.grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prediction Grid for Meuse Data Set — meuse.grid","text":"","code":"data(meuse.grid, package = \"spEnviroDistr\") coordinates(meuse.grid) <- ~x+y proj4string(meuse.grid) <- CRS(\"+init=epsg:28992\") gridded(meuse.grid) <- TRUE  # Visualize the elevation data spplot(meuse.grid, \"alt\")   # Visualize multiple variables spplot(meuse.grid, c(\"dist\", \"soil\", \"ffreq\", \"part.a\", \"part.b\", \"elev\"))"},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/meuse.html","id":null,"dir":"Reference","previous_headings":"","what":"Meuse River Data Set — meuse","title":"Meuse River Data Set — meuse","text":"data set provides locations topsoil heavy metal concentrations along number soil landscape variables observation locations. data collected floodplain river Meuse, near village Stein Netherlands (NL). heavy metal concentrations measured composite samples taken area approximately 15 m x 15 m.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/meuse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Meuse River Data Set — meuse","text":"","code":"data(meuse, package = \"spEnviroDistr\")"},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/meuse.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Meuse River Data Set — meuse","text":"data frame 155 observations following 15 variables: x numeric vector; Easting (m) Rijksdriehoek (RDH), Dutch national coordinate system. y numeric vector; Northing (m) RDH coordinates. cadmium Topsoil cadmium concentration, measured mg/kg soil (ppm). Zero cadmium values original data set adjusted 0.2 ppm, half lowest non-zero value. copper Topsoil copper concentration, measured mg/kg soil (ppm). lead Topsoil lead concentration, measured mg/kg soil (ppm). zinc Topsoil zinc concentration, measured mg/kg soil (ppm). elev Relative elevation local riverbed meters. alt Altitude sea level meters, derived meuse.alt dataset, provides altitudes digitized 1:10,000 topographical map Netherlands. dist Distance Meuse River, obtained nearest cell meuse.grid dataset, derived using spatial distance GIS operation. distance normalized range \\([0,1]\\). om Organic matter content, measured percentage (kg per 100 kg soil). ffreq Flooding frequency class: \"1\" indicates flooding two years; \"2\" indicates flooding ten years; \"3\" indicates flooding 50 years. soil Soil type according 1:50,000 soil map Netherlands. \"1\" corresponds Rd10A (Calcareous weakly-developed meadow soils, light sandy clay); \"2\" corresponds Rd90C/VII (Non-calcareous weakly-developed meadow soils, heavy sandy clay light clay); \"3\" corresponds Bkd26/VII (Red Brick soil, fine-sandy, silty light clay). lime Lime presence: 0 = absent, 1 = present, determined field test using 5% HCl. landuse Land use classification: \"Aa\" = Agriculture/unspecified, \"Ab\" = Agriculture/sugar beets, \"Ag\" = Agriculture/small grains, \"Ah\" = Agriculture/, \"\" = Agriculture/maize, \"B\" = woods, \"Bw\" = trees pasture, \"DEN\" = , \"Fh\" = tall fruit trees, \"Fl\" = low fruit trees, \"Fw\" = fruit trees pasture, \"Ga\" = home gardens, \"SPO\" = sport field, \"STA\" = stable yard, \"Tv\" = , \"W\" = pasture. dist.m Distance Meuse River meters, measured field survey.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/meuse.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Meuse River Data Set — meuse","text":"http://www.gstat.org/","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/meuse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Meuse River Data Set — meuse","text":"soil units mapped minimum delineation width 150 m, means landscape somewhat generalized. data provides valuable resource understanding distribution heavy metals topsoil floodplain, often used geostatistical analyses environmental modeling.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/meuse.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Meuse River Data Set — meuse","text":"Row names refer original sample numbers dataset.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/meuse.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Meuse River Data Set — meuse","text":"M G J Rikken R P G Van Rijn, 1993. Soil pollution heavy metals - inquiry spatial variation, cost mapping risk evaluation copper, cadmium, lead zinc floodplains Meuse west Stein, Netherlands. Doctoraalveldwerkverslag, Dept. Physical Geography, Utrecht University. P.. Burrough, R.. McDonnell, 1998. Principles Geographical Information Systems. Oxford University Press. Stichting voor Bodemkartering (STIBOKA), 1970. Bodemkaart van Nederland: Blad 59 Peer, Blad 60 West en 60 Oost Sittard: schaal 1:50 000. Wageningen, STIBOKA.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/meuse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Meuse River Data Set — meuse","text":"","code":"data(meuse, package = \"spEnviroDistr\") summary(meuse) #>        x                y             cadmium           copper       #>  Min.   :178605   Min.   :329714   Min.   : 0.200   Min.   : 14.00   #>  1st Qu.:179371   1st Qu.:330762   1st Qu.: 0.800   1st Qu.: 23.00   #>  Median :179991   Median :331633   Median : 2.100   Median : 31.00   #>  Mean   :180005   Mean   :331635   Mean   : 3.246   Mean   : 40.32   #>  3rd Qu.:180630   3rd Qu.:332463   3rd Qu.: 3.850   3rd Qu.: 49.50   #>  Max.   :181390   Max.   :333611   Max.   :18.100   Max.   :128.00   #>                                                                      #>       lead            zinc             elev             alt        #>  Min.   : 37.0   Min.   : 113.0   Min.   : 5.180   Min.   :32.29   #>  1st Qu.: 72.5   1st Qu.: 198.0   1st Qu.: 7.546   1st Qu.:35.49   #>  Median :123.0   Median : 326.0   Median : 8.180   Median :36.61   #>  Mean   :153.4   Mean   : 469.7   Mean   : 8.165   Mean   :36.45   #>  3rd Qu.:207.0   3rd Qu.: 674.5   3rd Qu.: 8.955   3rd Qu.:37.42   #>  Max.   :654.0   Max.   :1839.0   Max.   :10.520   Max.   :41.66   #>                                                                    #>       dist               om         ffreq  soil   lime       landuse   #>  Min.   :0.00000   Min.   : 1.000   1:84   1:97   0:111   W      :50   #>  1st Qu.:0.07569   1st Qu.: 5.300   2:48   2:46   1: 44   Ah     :39   #>  Median :0.21184   Median : 6.900   3:23   3:12           Am     :22   #>  Mean   :0.24002   Mean   : 7.478                         Fw     :10   #>  3rd Qu.:0.36407   3rd Qu.: 9.000                         Ab     : 8   #>  Max.   :0.88039   Max.   :17.000                         (Other):25   #>                    NA's   :2                              NA's   : 1   #>      dist.m       #>  Min.   :  10.0   #>  1st Qu.:  80.0   #>  Median : 270.0   #>  Mean   : 290.3   #>  3rd Qu.: 450.0   #>  Max.   :1000.0   #>                   coordinates(meuse) <- ~x+y proj4string(meuse) <- CRS(\"+init=epsg:28992\") bubble(meuse, \"zinc\", col = c(\"#00ff0088\", \"#00ff0088\"), main = \"Zinc concentrations (ppm)\")  spplot(meuse, c(\"cadmium\", \"zinc\", \"copper\", \"lead\"))"},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/spData.html","id":null,"dir":"Reference","previous_headings":"","what":"Average Air Temperature and Elevation Data for Cauquenes (WorldClim and ASTER) — spData","title":"Average Air Temperature and Elevation Data for Cauquenes (WorldClim and ASTER) — spData","text":"dataset contains three rasters: Average Annual Air Temperature (tavg), Elevation (elev) WorldClim 2.1, Digital Elevation Model (dem) ASTER, clipped extent Cauquenes region Chile.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/spData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Average Air Temperature and Elevation Data for Cauquenes (WorldClim and ASTER) — spData","text":"","code":"data(dem, package = \"spEnviroDistr\")  data(elev, package = \"spEnviroDistr\")  data(tavg, package = \"spEnviroDistr\")"},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/spData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Average Air Temperature and Elevation Data for Cauquenes (WorldClim and ASTER) — spData","text":"list three SpatRaster objects terra package: tavg Annual Mean Temperature (BIO1) °C, derived WorldClim 2.1, representing average air temperature period 1970-2000. elev Elevation meters, derived WorldClim 2.1, representing altitude sea level. dem Digital Elevation Model (DEM) ASTER, representing terrain elevation meters spatial resolution 30 meters.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/spData.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Average Air Temperature and Elevation Data for Cauquenes (WorldClim and ASTER) — spData","text":"WorldClim 2.1: https://www.worldclim.org/data/worldclim21.html NASA/METI/AIST/Japan Spacesystems, U.S./Japan ASTER Science Team. ASTER Global Digital Elevation Model V003. 2018, distributed NASA EOSDIS Land Processes DAAC, https://doi.org/10.5067/ASTER/ASTGTM.003","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/spData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Average Air Temperature and Elevation Data for Cauquenes (WorldClim and ASTER) — spData","text":"dataset ideal spatial environmental analysis ecological modeling. three rasters provide valuable information climate elevation Cauquenes region, located central Chile. data can used spatial interpolation, geostatistical analysis, climate modeling. rasters provided EPSG:4326 (WGS84) coordinate reference system.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/spData.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Average Air Temperature and Elevation Data for Cauquenes (WorldClim and ASTER) — spData","text":"Fick, S.E. Hijmans, R.J., 2017. WorldClim 2: New 1 km spatial resolution climate surfaces global land areas. International Journal Climatology, 37(12): 4302-4315. DOI: doi:10.1002/joc.5086 NASA/METI/AIST/Japan Spacesystems, U.S./Japan ASTER Science Team. ASTER Global Digital Elevation Model V003. 2018, distributed NASA EOSDIS Land Processes DAAC, doi:10.5067/ASTER/ASTGTM.003","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/spData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Average Air Temperature and Elevation Data for Cauquenes (WorldClim and ASTER) — spData","text":"","code":"# Load the dataset data(dem) data(elev) data(tavg) plot(dem)  plot(elev)  plot(tavg)"},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/spEnviroDistr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"spEnviroDistr: Tools for Spatial Distribution of Environmental Data — spEnviroDistr-package","title":"spEnviroDistr: Tools for Spatial Distribution of Environmental Data — spEnviroDistr-package","text":"`spEnviroDistr` R package designed provide advanced tools handling, analyzing, visualizing spatial environmental data. package focused spatial distribution environmental geographic variables, facilitating geospatial analysis research related ecology, geography, geology, environmental sciences. includes functions conducting Geographically Weighted Regression (GWR), managing parallel processing clusters, filling missing values raster data, converting data frames spatial grid objects. Additionally, provides well-known datasets like 'meuse' 'meuse.grid' demonstrating spatial data analysis techniques.","code":""},{"path":[]},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/spEnviroDistr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"spEnviroDistr: Tools for Spatial Distribution of Environmental Data — spEnviroDistr-package","text":"Maintainer: Guillermo Fuentes-Jaque g.fuentes@renare.uchile.cl (ORCID)","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/toGrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a Data Frame into a Spatial Grid Object — toGrid","title":"Convert a Data Frame into a Spatial Grid Object — toGrid","text":"function transforms data frame spatial grid object, making suitable spatial analysis. function uses columns specified coords parameter define spatial coordinates data frame. coordinate reference system (CRS) specified crs_str parameter, defines spatial coordinates interpreted. resulting grid object can used spatial analysis various spatial data packages tools.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/toGrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a Data Frame into a Spatial Grid Object — toGrid","text":"","code":"toGrid(x, coords, crs_str)"},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/toGrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a Data Frame into a Spatial Grid Object — toGrid","text":"x data frame containing spatial data. data frame must include columns represent coordinates. coords character vector length 2 specifying names columns data frame represent x y coordinates, respectively. crs_str character string CRS object representing coordinate reference system assigned spatial object. NULL, CRS assigned, warning issued.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/toGrid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a Data Frame into a Spatial Grid Object — toGrid","text":"spatial grid object (SpatialGridDataFrame) specified coordinates CRS.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/toGrid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a Data Frame into a Spatial Grid Object — toGrid","text":"function first checks input x data frame coords parameter specifies two valid column names x. columns specified coords renamed \"Longitude\" \"Latitude\" internal processing. function converts data frame spatial object using coordinates function sp package, sets coordinate reference system (CRS) using proj4string, finally converts spatial points grid structure using gridded. valid crs_str provided, function proceed without assigning CRS, issue warning. Assigning CRS important ensuring spatial data aligns correctly spatial datasets.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/toGrid.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convert a Data Frame into a Spatial Grid Object — toGrid","text":"function assumes input data frame structured coordinates projection system. coordinates different projection projected, user must provide appropriate crs_str.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/toGrid.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert a Data Frame into a Spatial Grid Object — toGrid","text":"Bivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied Spatial Data Analysis R (2nd ed.). Springer. doi:10.1007/978-1-4614-7618-4 Pebesma, E., & Bivand, R. S. (2005). Classes methods spatial data R. R News, 5(2), 9-13.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/toGrid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a Data Frame into a Spatial Grid Object — toGrid","text":"","code":"# Load the meuse.grid data data(meuse.grid, package = \"spEnviroDistr\")  # Convert meuse.grid to a spatial grid with specified coordinates and CRS meuse.grid <- toGrid(meuse.grid, coords = c(\"x\", \"y\"), crs_str = \"+init=epsg:28992\")  # Plot the spatial grid spplot(meuse.grid, \"alt\")  spplot(meuse.grid, c(\"dist\", \"soil\", \"ffreq\", \"part.a\", \"part.b\", \"elev\"))"},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/toPredictors.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a List of Layers into a RasterStack of Predictors — toPredictors","title":"Convert a List of Layers into a RasterStack of Predictors — toPredictors","text":"function converts list raster layers SpatRaster object, aligning common reference grid spatial analysis. allows resampling layers match specified reference layer assigns appropriate names resulting raster stack.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/toPredictors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a List of Layers into a RasterStack of Predictors — toPredictors","text":"","code":"toPredictors(layerList, layerNames = NULL, reference = NULL)"},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/toPredictors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a List of Layers into a RasterStack of Predictors — toPredictors","text":"layerList list raster layers (SpatRaster objects) combined SpatRaster stack. layers represent different environmental variables predictors. layerNames optional character vector specifying names layers resulting SpatRaster. provided, function attempt derive names input list. reference optional reference layer (SpatRaster) layers layerList resampled. provided, first layer layerList used reference.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/toPredictors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a List of Layers into a RasterStack of Predictors — toPredictors","text":"SpatRaster object layers resampled match reference layer assigned appropriate names.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/toPredictors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a List of Layers into a RasterStack of Predictors — toPredictors","text":"function first checks layerNames provided can derived layerList. length layerNames match length layerList, function stop return error. reference layer provided, function use first layer layerList reference resampling. layer layerList resampled match reference layer's resolution extent. resulting raster layers combined SpatRaster stack, can used input spatial analysis modeling.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/toPredictors.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convert a List of Layers into a RasterStack of Predictors — toPredictors","text":"function uses parallel processing speed resampling process dealing large datasets.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/toPredictors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a List of Layers into a RasterStack of Predictors — toPredictors","text":"","code":"library(terra)  # Example raster layers r1 <- rast(nrows=10, ncols=10) r2 <- rast(nrows=10, ncols=10) values(r1) <- runif(ncell(r1)) values(r2) <- runif(ncell(r2))  # Convert to list layers <- list(r1, r2)  # Use the first layer as reference for resampling predictors <- toPredictors(layers) #> IMPORTANT! #> First layer will be used as reference for resampling  # Check the names and extent names(predictors) #> [1] \"lyr.1\" \"lyr.1\" ext(predictors) #> SpatExtent : -180, 180, -90, 90 (xmin, xmax, ymin, ymax)"},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/toSpatData.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert SpatRaster to Spatial Points Data Frame — toSpatData","title":"Convert SpatRaster to Spatial Points Data Frame — toSpatData","text":"function converts SpatRaster object SpatialPointsDataFrame, preserving coordinate reference system (CRS) including x y coordinates. useful need work raster data spatial format suitable analysis various spatial data packages.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/toSpatData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert SpatRaster to Spatial Points Data Frame — toSpatData","text":"","code":"toSpatData(layers, na.rm = TRUE)"},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/toSpatData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert SpatRaster to Spatial Points Data Frame — toSpatData","text":"layers SpatRaster object representing raster layers converted. na.rm Logical. TRUE, NA values removed data (default TRUE).","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/toSpatData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert SpatRaster to Spatial Points Data Frame — toSpatData","text":"SpatialPointsDataFrame object containing raster data corresponding spatial coordinates.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/toSpatData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert SpatRaster to Spatial Points Data Frame — toSpatData","text":"function first converts SpatRaster tibble x y coordinates using as_tibble function. resulting tibble converted spatial object spatial points (x y coordinates). coordinate reference system (CRS) assigned input raster using proj4string function.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/toSpatData.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convert SpatRaster to Spatial Points Data Frame — toSpatData","text":"function assumes SpatRaster object valid CRS. CRS missing invalid, resulting spatial object may align properly spatial data.","code":""},{"path":"https://djwillichile.github.io/spEnviroDistr/reference/toSpatData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert SpatRaster to Spatial Points Data Frame — toSpatData","text":"","code":"logo <- rast(system.file(\"ex/logo.tif\", package=\"terra\")) names(logo) <- c(\"red\", \"green\", \"blue\") spat_data <- toSpatData(logo) #> Error in toSpatData(logo): could not find function \"toSpatData\" head(spat_data) #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'head': object 'spat_data' not found"}]
